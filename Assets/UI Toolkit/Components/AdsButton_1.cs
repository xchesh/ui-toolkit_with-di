using System;
using Unity.Properties;
using UnityEngine;
using UnityEngine.UIElements;

[UxmlElement]
public partial class AdsButton_1 : Button
{
    private IAdsService _adsService;

    public AdsButton_1() : this(true)
    {
        this.clicked += OnClick;

        RegisterCallback<DependencyResolvedEvent>(DependencyResolvedEventHandler);

        Debug.Log("AdsButton_1: Constructor");
    }

    private void DependencyResolvedEventHandler(DependencyResolvedEvent evt)
    {
        Debug.Log("DependencyResolvedEventHandler: AdsService = " + _adsService);
        Debug.Log("DependencyResolvedEventHandler: IComponentResolver = " + Resolver);
    }

    partial void OnInitialized()
    {
        Debug.Log("OnInitialized: AdsService = " + _adsService);
        Debug.Log("OnInitialized: IComponentResolver = " + Resolver);
    }

    private void OnClick()
    {
        Debug.Log("ShowRewarded callback: AdsService = " + _adsService);
        Debug.Log("ShowRewarded callback: IComponentResolver = " + Resolver);

        if (_adsService != null)
        {
            _adsService.ShowRewarded("placement", (success) => { Debug.Log("ShowRewarded callback: " + success); });
        }
    }
}

// ↓↓↓ THIS CODE SHOULD BE GENERATED BY SOURCE CODE GENERATOR ↓↓↓ 
public partial class AdsButton_1
{
    public AdsButton_1(bool resolve)
    {
        if (Application.isPlaying is false || resolve is false) return;

        ResolveDependencies();
    }

    private IComponentResolver _resolver;

    [CreateProperty]
    public IComponentResolver Resolver
    {
        get => _resolver;
        set { _resolver = value; OnDependencyResolved(); }
    }

    private void ResolveDependencies()
    {
        SetBinding(nameof(Resolver), new DataBinding
        {
            dataSourcePath = new PropertyPath(nameof(DataSource.componentResolver)),
            bindingMode = BindingMode.ToTargetOnce
        });
    }

    private void OnDependencyResolved()
    {
        _adsService = _resolver.Resolve<IAdsService>();

        using (DependencyResolvedEvent evn = DependencyResolvedEvent.GetPooled())
        {
            panel.visualTree.SendEvent(evn);
        }

        OnInitialized();
    }

    partial void OnInitialized();
}

public class DependencyResolvedEvent : EventBase<DependencyResolvedEvent>
{

}
